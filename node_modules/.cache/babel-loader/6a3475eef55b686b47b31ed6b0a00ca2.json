{"ast":null,"code":"var _jsxFileName = \"/home/yumick/Lake Shore/Projects/Responsive-Portfolio/src/components/common/header.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { AlignRight } from \"react-feather\";\nimport NavigationDrawer from \"../../navigation-drawer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  _s();\n\n  let {\n    setActivePage\n  } = _ref;\n  const [isNavDrawerOpened, setIsNavDrawerOpened] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed z-50 top-[5px] md:top-[20px] right-[5px] md:right-[18px]\",\n      children: /*#__PURE__*/_jsxDEV(AlignRight, {\n        className: \"cursor-pointer\",\n        onClick: () => setIsNavDrawerOpened(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigationDrawer, {\n      isOpened: isNavDrawerOpened,\n      setIsOpened: setIsNavDrawerOpened,\n      setActivePage: setActivePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"8sZRTv9BFGrdj1WBARAIA5DtbVI=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["useState","AlignRight","NavigationDrawer","Header","setActivePage","isNavDrawerOpened","setIsNavDrawerOpened"],"sources":["/home/yumick/Lake Shore/Projects/Responsive-Portfolio/src/components/common/header.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { AlignRight } from \"react-feather\";\nimport NavigationDrawer from \"../../navigation-drawer\";\n\nconst Header = ({ setActivePage }) => {\n  const [isNavDrawerOpened, setIsNavDrawerOpened] = useState(false);\n\n  return (\n    <>\n      <div className=\"fixed z-50 top-[5px] md:top-[20px] right-[5px] md:right-[18px]\">\n        <AlignRight\n          className=\"cursor-pointer\"\n          onClick={() => setIsNavDrawerOpened(true)}\n        />\n      </div>\n\n      <NavigationDrawer\n        isOpened={isNavDrawerOpened}\n        setIsOpened={setIsNavDrawerOpened}\n        setActivePage={setActivePage}\n      />\n    </>\n  );\n};\n\nexport default Header;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;;;AAEA,MAAMC,MAAM,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EACpC,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CN,QAAQ,CAAC,KAAD,CAA1D;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,gEAAf;MAAA,uBACE,QAAC,UAAD;QACE,SAAS,EAAC,gBADZ;QAEE,OAAO,EAAE,MAAMM,oBAAoB,CAAC,IAAD;MAFrC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,gBAAD;MACE,QAAQ,EAAED,iBADZ;MAEE,WAAW,EAAEC,oBAFf;MAGE,aAAa,EAAEF;IAHjB;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAgBD,CAnBD;;GAAMD,M;;KAAAA,M;AAqBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}